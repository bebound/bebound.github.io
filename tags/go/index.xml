<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on KK's Blog (fromkk)</title><link>https://www.fromkk.com/tags/go/</link><description>Recent content in Go on KK's Blog (fromkk)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 19 Dec 2019 22:33:00 +0800</lastBuildDate><atom:link href="https://www.fromkk.com/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Difference between Value and Pointer variable in Defer in Go</title><link>https://www.fromkk.com/posts/difference-between-value-and-pointer-variable-in-defer-in-go/</link><pubDate>Thu, 19 Dec 2019 22:33:00 +0800</pubDate><guid>https://www.fromkk.com/posts/difference-between-value-and-pointer-variable-in-defer-in-go/</guid><description>defer is a useful function to do cleanup, as it will execute in LIFO order before the surrounding function returns. If you don&amp;rsquo;t know how it works, sometimes the execution result may confuse you.
How it Works and Why Value or Pointer Receiver Matters #I found an interesting code on Stack Overflow:</description></item></channel></rss>