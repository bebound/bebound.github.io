<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on KK's Blog (fromkk)</title><link>https://www.fromkk.com/tags/python/</link><description>Recent content in Python on KK's Blog (fromkk)</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 18 Oct 2024 11:00:15 +0800</lastBuildDate><atom:link href="https://www.fromkk.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>sys.path in Python</title><link>https://www.fromkk.com/posts/sys-dot-path-in-python/</link><pubDate>Sun, 11 Aug 2024 15:56:00 +0800</pubDate><guid>https://www.fromkk.com/posts/sys-dot-path-in-python/</guid><description>&lt;p>Here is the process how &lt;code>sys.path&lt;/code> is set in Python, with some parts omitted.&lt;/p>
&lt;h2 id="python-command-line-arguments" class="relative group">Python Command Line Arguments &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#python-command-line-arguments" aria-label="Anchor">#&lt;/a>&lt;/span>&lt;/h2>&lt;p>By default, as initialized upon program startup, a potentially unsafe path is prepended to &lt;code>sys.path&lt;/code>:&lt;/p></description></item><item><title>__import__ in Python</title><link>https://www.fromkk.com/posts/import-in-python/</link><pubDate>Sun, 07 Apr 2024 15:58:00 +0800</pubDate><guid>https://www.fromkk.com/posts/import-in-python/</guid><description>&lt;p>It&amp;rsquo;s known that Python&amp;rsquo;s &lt;code>import&lt;/code> statement is implemented by &lt;code>__import__&lt;/code> function. In general, if we want to import a module dynamically, we can use &lt;code>import_module&lt;/code> function, which is a wrapper around &lt;code>__import__&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>The most important difference between these two functions is that import_module() returns the specified package or module (e.g. pkg.mod), while &lt;strong>import&lt;/strong>() returns the top-level package or module (e.g. pkg). &amp;ndash; &lt;a href="https://docs.python.org/3/library/importlib.html#importlib.import_module" target="_blank" rel="noreferrer">https://docs.python.org/3/library/importlib.html#importlib.import_module&lt;/a>&lt;/p></description></item><item><title>Python 3.11 changes</title><link>https://www.fromkk.com/posts/python-3-dot-11-changes/</link><pubDate>Sun, 10 Dec 2023 15:24:00 +0800</pubDate><guid>https://www.fromkk.com/posts/python-3-dot-11-changes/</guid><description>&lt;p>In &lt;a href="https://github.com/Azure/azure-cli/pull/26923" target="_blank" rel="noreferrer">[Packaging] Support Python 3.11 by bebound · Pull Request #26923 · Azure/azure-cli (github.com)&lt;/a> , I bumped azure-cli to use Python 3.11. We&amp;rsquo;ve bump the dependency in other PRs, I thought it should be a small PR, but in the end, a lot of changes are made.&lt;/p></description></item><item><title>Memory Leak in Python multiprocessing.Pool</title><link>https://www.fromkk.com/posts/memory-leak-in-python-multiprocessing-dot-pool/</link><pubDate>Wed, 16 Mar 2022 21:04:00 +0800</pubDate><guid>https://www.fromkk.com/posts/memory-leak-in-python-multiprocessing-dot-pool/</guid><description>&lt;p>There is a historical memory leak problem in our Django app and I fixed it recently. As time goes by, the memory usage of app keeps growing and so does the CPU usage.&lt;/p>

 
 
 
 
 

 
 
 
 
 
 &lt;figure>
 &lt;img src="https://www.fromkk.com/images/pool_before.png" alt="" class=""/>
 
 &lt;/figure>


&lt;p>After some research, I figure out the cause. Some views does not close &lt;code>multiprocessing.Pool&lt;/code> after using it. The problem disappears when I use &lt;code>Pool&lt;/code> with &lt;code>with&lt;/code> statement.&lt;/p></description></item><item><title>How to disable auto strip in Charfield in Django</title><link>https://www.fromkk.com/posts/how-to-disable-auto-strip-in-charfield-in-django/</link><pubDate>Sun, 19 Dec 2021 21:20:00 +0800</pubDate><guid>https://www.fromkk.com/posts/how-to-disable-auto-strip-in-charfield-in-django/</guid><description>&lt;p>In Django, when edit field in admin page or post data to forms, the leading and tailing whitespace in &lt;code>CharField&lt;/code> and &lt;code>TextField&lt;/code> are removed.&lt;/p>
&lt;p>The reason is &lt;code>strip=True&lt;/code> parameter in &lt;code>forms.CharField&lt;/code>, which is added in Djagno 1.9. You can see the discussion in &lt;a href="https://code.djangoproject.com/ticket/4960" target="_blank" rel="noreferrer">django tiket #4960&lt;/a> and here is &lt;a href="https://github.com/django/django/blob/4ce59f602ed28320caf3035212cb4d1c5430da2b/django/forms/fields.py#L211" target="_blank" rel="noreferrer">source code&lt;/a>. &lt;code>models.CharField&lt;/code> and &lt;code>models.TextField&lt;/code> use &lt;code>formfield()&lt;/code> to create form to interact with user, then both of them eventually create a &lt;code>forms.CharField&lt;/code>&lt;/p></description></item><item><title>Using JSONField before Django 3.1</title><link>https://www.fromkk.com/posts/using-jsonfield-before-django-3-dot-1/</link><pubDate>Sat, 11 Sep 2021 21:12:00 +0800</pubDate><guid>https://www.fromkk.com/posts/using-jsonfield-before-django-3-dot-1/</guid><description>&lt;p>In Django 3.1, Django support save python data into database as JSON encoded data and it is also possible to make query based on field value in JSONField. The detailed usage can be found &lt;a href="https://docs.djangoproject.com/en/3.2/topics/db/queries/#querying-jsonfield" target="_blank" rel="noreferrer">here&lt;/a>. If you are using older version and want to try this feature. Though there are many packages ported this function, I recommend &lt;a href="https://github.com/laymonage/django-jsonfield-backport" target="_blank" rel="noreferrer">django-jsonfield-backport&lt;/a>.&lt;/p></description></item><item><title>Using cibuildwheel to Create Python Wheels</title><link>https://www.fromkk.com/posts/using-cibuildwheel-to-create-python-wheels/</link><pubDate>Wed, 29 Jul 2020 22:53:00 +0800</pubDate><guid>https://www.fromkk.com/posts/using-cibuildwheel-to-create-python-wheels/</guid><description>&lt;p>Have you ever tried to install &lt;code>MySQL-python&lt;/code>? It contains the C code and need to compile the code while install the package. You have to follow the steps in this articles: &lt;a href="https://ruddra.com/install-mysqlclient-macos/" target="_blank" rel="noreferrer">Install MySQL and MySQLClient(Python) in MacOS&lt;/a>. Things get worse if you are using Windows.&lt;/p></description></item><item><title>Program Crash Caused by CPU Instruction</title><link>https://www.fromkk.com/posts/program-crash-caused-by-cpu-instruction/</link><pubDate>Sun, 17 May 2020 17:36:00 +0800</pubDate><guid>https://www.fromkk.com/posts/program-crash-caused-by-cpu-instruction/</guid><description>&lt;p>It&amp;rsquo;s inevitable to dealing with bugs in coding career. The main part of coding are implementing new features, fixing bugs and improving performance. For me, there are two kinds of bugs that is difficult to tackle: those are hard to reproduce, and those occur in code not wrote by you.&lt;/p></description></item><item><title>Import custom package or module in PySpark</title><link>https://www.fromkk.com/posts/import-custom-package-or-module-in-pyspark/</link><pubDate>Thu, 02 Apr 2020 22:24:00 +0800</pubDate><guid>https://www.fromkk.com/posts/import-custom-package-or-module-in-pyspark/</guid><description>&lt;p>First zip all of the dependencies into zip file like this. Then you can use one of the following methods to import it.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-nil" data-lang="nil">|-- kk.zip
| |-- kk.py
&lt;/code>&lt;/pre>&lt;h2 id="using-py-files-in-spark-submit" class="relative group">Using &amp;ndash;py-files in spark-submit &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#using-py-files-in-spark-submit" aria-label="Anchor">#&lt;/a>&lt;/span>&lt;/h2>&lt;p>When submit spark job, add &lt;code>--py-files=kk.zip&lt;/code> parameter. &lt;code>kk.zip&lt;/code> will be distributed with the main scrip file, and &lt;code>kk.zip&lt;/code> will be inserted at the beginning of &lt;code>PATH&lt;/code> environment variable.&lt;/p></description></item><item><title>C3 Linearization and Python MRO(Method Resolution Order)</title><link>https://www.fromkk.com/posts/c3-linearization-and-python-mro--method-resolution-order/</link><pubDate>Sat, 14 Mar 2020 17:37:00 +0800</pubDate><guid>https://www.fromkk.com/posts/c3-linearization-and-python-mro--method-resolution-order/</guid><description>&lt;p>Python supports multiple inheritance, its class can be derived from more than one base classes. If the specified attribute or methods was not found in current class, how to decide the search sequence from superclasses? In simple scenario, we know left-to right, bottom to up. But when the inheritance hierarchy become complicated, it&amp;rsquo;s not easy to answer by intuition.&lt;/p></description></item><item><title>Torchtext snippets</title><link>https://www.fromkk.com/posts/torchtext-snippets/</link><pubDate>Mon, 01 Jul 2019 21:28:00 +0800</pubDate><guid>https://www.fromkk.com/posts/torchtext-snippets/</guid><description>&lt;h2 id="load-separate-files" class="relative group">Load separate files &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#load-separate-files" aria-label="Anchor">#&lt;/a>&lt;/span>&lt;/h2>&lt;p>&lt;code>data.Field&lt;/code> parameters is &lt;a href="https://torchtext.readthedocs.io/en/latest/data.html#torchtext.data.Field" target="_blank" rel="noreferrer">here&lt;/a>.&lt;/p>
&lt;p>When calling &lt;code>build_vocab&lt;/code>, torchtext will add &lt;code>&amp;lt;unk&amp;gt;&lt;/code> in vocabulary list. Set &lt;code>unk_token=None&lt;/code> if you want to remove it. If &lt;code>sequential=True&lt;/code> (default), it will add &lt;code>&amp;lt;pad&amp;gt;&lt;/code> in vocab. &lt;code>&amp;lt;unk&amp;gt;&lt;/code> and &lt;code>&amp;lt;pad&amp;gt;&lt;/code> will add at the beginning of vocabulary list by default.&lt;/p></description></item><item><title>Circular Import in Python</title><link>https://www.fromkk.com/posts/circular-import-in-python/</link><pubDate>Sun, 10 Mar 2019 10:59:00 +0800</pubDate><guid>https://www.fromkk.com/posts/circular-import-in-python/</guid><description>&lt;p>Recently, I found a really good example code for Python circular import, and I&amp;rsquo;d like to record it here.&lt;/p>
&lt;p>Here is the code:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># X.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">X1&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;x1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">Y&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Y2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">X2&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;x2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python3" data-lang="python3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Y.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">Y1&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;y1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">X&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">X1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">Y2&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;y2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Guess what will happen if you run &lt;code>python X.py&lt;/code> and &lt;code>python Y.py&lt;/code>?&lt;/p></description></item><item><title>Python Dictionary Implementation</title><link>https://www.fromkk.com/posts/python-dictionary-implementation/</link><pubDate>Sun, 17 Feb 2019 21:48:00 +0800</pubDate><guid>https://www.fromkk.com/posts/python-dictionary-implementation/</guid><description>&lt;h2 id="overview" class="relative group">Overview &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#overview" aria-label="Anchor">#&lt;/a>&lt;/span>&lt;/h2>&lt;ol>
&lt;li>CPython allocation memory to save dictionary, the initial table size is 8, entries are saved as &lt;code>&amp;lt;hash,key,value&amp;gt;&lt;/code> in each slot(The slot content changed after Python 3.6).&lt;/li>
&lt;li>When a new key is added, python use &lt;code>i = hash(key) &amp;amp; mask&lt;/code> where &lt;code>mask=table_size-1&lt;/code> to calculate which slot it should be placed. If the slot is occupied, CPython using a probing algorithm to find the empty slot to store new item.&lt;/li>
&lt;li>When 2/3 of the table is full, the table will be resized.&lt;/li>
&lt;li>When getting item from dictionary, both &lt;code>hash&lt;/code> and &lt;code>key&lt;/code> must be equal.&lt;/li>
&lt;/ol>
&lt;h2 id="resizing" class="relative group">Resizing &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#resizing" aria-label="Anchor">#&lt;/a>&lt;/span>&lt;/h2>&lt;p>When elements size is below 50000, the table size will increase by a factor of 4 based on used slots. Otherwise, it will increase by a factor of 2. The dictionary size is always \(2^{n}\).&lt;/p></description></item><item><title>CSRF in Django</title><link>https://www.fromkk.com/posts/csrf-in-django/</link><pubDate>Wed, 07 Nov 2018 13:58:00 +0800</pubDate><guid>https://www.fromkk.com/posts/csrf-in-django/</guid><description>&lt;p>CSRF(Cross-site request forgery) is a way to generate fake user request to target website. For example, on a malicious website A, there is a button, click it will send request to &lt;a href="https://www.B.com/logout" target="_blank" rel="noreferrer">www.B.com/logout&lt;/a>. When the user click this button, he will logout from website B unconsciously. Logout is not a big problem, but malicious website can generate more dangerous request like money transfer.&lt;/p></description></item><item><title>Create Node Benchmark in Py2neo</title><link>https://www.fromkk.com/posts/create-node-benchmark-in-py2neo/</link><pubDate>Mon, 05 Nov 2018 15:55:00 +0800</pubDate><guid>https://www.fromkk.com/posts/create-node-benchmark-in-py2neo/</guid><description>&lt;p>Recently, I&amp;rsquo;m working on a neo4j project. I use &lt;code>Py2neo&lt;/code> to interact with graph db. Although &lt;code>Py2neo&lt;/code> is a very Pythonic and easy to use, its performance is really poor. Sometimes I have to manually write cypher statement by myself if I can&amp;rsquo;t bear with the slow execution. Here is a small script which I use to compare the performance of 4 different ways to insert nodes.&lt;/p></description></item><item><title>Deploy Nikola Org Mode on Travis</title><link>https://www.fromkk.com/posts/deploy-nikola-org-mode-on-travis/</link><pubDate>Sat, 03 Nov 2018 21:20:00 +0800</pubDate><guid>https://www.fromkk.com/posts/deploy-nikola-org-mode-on-travis/</guid><description>&lt;p>Recently, I enjoy using &lt;code>Spacemacs&lt;/code>, so I decided to switch to org file from Markdown for writing blog. After several attempts, I managed to let Travis convert org file to HTML. Here are the steps.&lt;/p>
&lt;h2 id="install-org-mode-plugin" class="relative group">Install Org Mode plugin &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#install-org-mode-plugin" aria-label="Anchor">#&lt;/a>&lt;/span>&lt;/h2>&lt;p>First you need to install Org Mode plugin on your computer following the official guide: &lt;a href="https://plugins.getnikola.com/v8/orgmode/" target="_blank" rel="noreferrer">Nikola orgmode plugin&lt;/a>.&lt;/p></description></item><item><title>Using Chinese Characters in Matplotlib</title><link>https://www.fromkk.com/posts/using-chinese-characters-in-matplotlib/</link><pubDate>Thu, 04 Oct 2018 15:53:00 +0800</pubDate><guid>https://www.fromkk.com/posts/using-chinese-characters-in-matplotlib/</guid><description>&lt;p>After searching from Google, here is easiest solution. This should also works on other languages:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.pyplot&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">plt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">%&lt;/span>&lt;span class="n">matplotlib&lt;/span> &lt;span class="n">inline&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">%&lt;/span>&lt;span class="n">config&lt;/span> &lt;span class="n">InlineBackend&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">figure_format&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;retina&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.font_manager&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">fm&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">f&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;/System/Library/Fonts/PingFang.ttc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">prop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FontProperties&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fname&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;你好&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">fontproperties&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">prop&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output:&lt;/p>

 
 
 
 
 

 
 
 
 
 
 &lt;figure>
 &lt;img src="https://www.fromkk.com/images/matplot_chinese.png" alt="" class=""/>
 
 &lt;/figure></description></item><item><title>Enable C Extension for gensim on Windows</title><link>https://www.fromkk.com/posts/enable-c-extension-for-gensim-on-windows/</link><pubDate>Sat, 10 Jun 2017 14:43:00 +0800</pubDate><guid>https://www.fromkk.com/posts/enable-c-extension-for-gensim-on-windows/</guid><description>&lt;p>These days, I’m working on some text classification works, and I use &lt;code>gensim&lt;/code> ’s &lt;code>doc2vec&lt;/code> function.&lt;/p>
&lt;p>When using gensim, it shows this warning message:&lt;/p>
&lt;p>&lt;code>C extension not loaded for Word2Vec, training will be slow.&lt;/code>&lt;/p>
&lt;p>I search this on Internet and found that gensim has rewrite some part of the code using &lt;code>cython&lt;/code> rather than &lt;code>numpy&lt;/code> to get better performance. A compiler is required to enable this feature.&lt;/p></description></item></channel></rss>