<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on KK's Blog</title><link>https://www.fromkk.com/tags/python/</link><description>Recent content in Python on KK's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 10 Dec 2023 15:24:00 +0800</lastBuildDate><atom:link href="https://www.fromkk.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Python 3.11 changes</title><link>https://www.fromkk.com/posts/python-3-dot-11-changes/</link><pubDate>Sun, 10 Dec 2023 15:24:00 +0800</pubDate><guid>https://www.fromkk.com/posts/python-3-dot-11-changes/</guid><description>In [Packaging] Support Python 3.11 by bebound · Pull Request #26923 · Azure/azure-cli (github.com) , I bumped azure-cli to use Python 3.11. We&amp;rsquo;ve bump the dependency in other PRs, I thought it should be a small PR, but in the end, a lot of changes are made.</description></item><item><title>Memory Leak in Python multiprocessing.Pool</title><link>https://www.fromkk.com/posts/memory-leak-in-python-multiprocessing-dot-pool/</link><pubDate>Wed, 16 Mar 2022 21:04:00 +0800</pubDate><guid>https://www.fromkk.com/posts/memory-leak-in-python-multiprocessing-dot-pool/</guid><description>There is a historical memory leak problem in our Django app and I fixed it recently. As time goes by, the memory usage of app keeps growing and so does the CPU usage.
After some research, I figure out the cause.</description></item><item><title>How to disable auto strip in Charfield in Django</title><link>https://www.fromkk.com/posts/how-to-disable-auto-strip-in-charfield-in-django/</link><pubDate>Sun, 19 Dec 2021 21:20:00 +0800</pubDate><guid>https://www.fromkk.com/posts/how-to-disable-auto-strip-in-charfield-in-django/</guid><description>In Django, when edit field in admin page or post data to forms, the leading and tailing whitespace in CharField and TextField are removed.
The reason is strip=True parameter in forms.CharField, which is added in Djagno 1.9. You can see the discussion in django tiket #4960 and here is source code.</description></item><item><title>Using JSONField before Django 3.1</title><link>https://www.fromkk.com/posts/using-jsonfield-before-django-3-dot-1/</link><pubDate>Sat, 11 Sep 2021 21:12:00 +0800</pubDate><guid>https://www.fromkk.com/posts/using-jsonfield-before-django-3-dot-1/</guid><description>In Django 3.1, Django support save python data into database as JSON encoded data and it is also possible to make query based on field value in JSONField. The detailed usage can be found here. If you are using older version and want to try this feature.</description></item><item><title>Using cibuildwheel to Create Python Wheels</title><link>https://www.fromkk.com/posts/using-cibuildwheel-to-create-python-wheels/</link><pubDate>Wed, 29 Jul 2020 22:53:00 +0800</pubDate><guid>https://www.fromkk.com/posts/using-cibuildwheel-to-create-python-wheels/</guid><description>Have you ever tried to install MySQL-python? It contains the C code and need to compile the code while install the package. You have to follow the steps in this articles: Install MySQL and MySQLClient(Python) in MacOS. Things get worse if you are using Windows.</description></item><item><title>Program Crash Caused by CPU Instruction</title><link>https://www.fromkk.com/posts/program-crash-caused-by-cpu-instruction/</link><pubDate>Sun, 17 May 2020 17:36:00 +0800</pubDate><guid>https://www.fromkk.com/posts/program-crash-caused-by-cpu-instruction/</guid><description>It&amp;rsquo;s inevitable to dealing with bugs in coding career. The main part of coding are implementing new features, fixing bugs and improving performance. For me, there are two kinds of bugs that is difficult to tackle: those are hard to reproduce, and those occur in code not wrote by you.</description></item><item><title>Import custom package or module in PySpark</title><link>https://www.fromkk.com/posts/import-custom-package-or-module-in-pyspark/</link><pubDate>Thu, 02 Apr 2020 22:24:00 +0800</pubDate><guid>https://www.fromkk.com/posts/import-custom-package-or-module-in-pyspark/</guid><description>First zip all of the dependencies into zip file like this. Then you can use one of the following methods to import it.
|-- kk.zip | |-- kk.py Using &amp;ndash;py-files in spark-submit #When submit spark job, add --py-files=kk.zip parameter. kk.zip will be distributed with the main scrip file, and kk.</description></item><item><title>C3 Linearization and Python MRO(Method Resolution Order)</title><link>https://www.fromkk.com/posts/c3-linearization-and-python-mro--method-resolution-order/</link><pubDate>Sat, 14 Mar 2020 17:37:00 +0800</pubDate><guid>https://www.fromkk.com/posts/c3-linearization-and-python-mro--method-resolution-order/</guid><description>Python supports multiple inheritance, its class can be derived from more than one base classes. If the specified attribute or methods was not found in current class, how to decide the search sequence from superclasses? In simple scenario, we know left-to right, bottom to up.</description></item><item><title>Torchtext snippets</title><link>https://www.fromkk.com/posts/torchtext-snippets/</link><pubDate>Mon, 01 Jul 2019 21:28:00 +0800</pubDate><guid>https://www.fromkk.com/posts/torchtext-snippets/</guid><description>Load separate files #data.Field parameters is here.
When calling build_vocab, torchtext will add &amp;lt;unk&amp;gt; in vocabulary list. Set unk_token=None if you want to remove it. If sequential=True (default), it will add &amp;lt;pad&amp;gt; in vocab. &amp;lt;unk&amp;gt; and &amp;lt;pad&amp;gt; will add at the beginning of vocabulary list by default.</description></item><item><title>Circular Import in Python</title><link>https://www.fromkk.com/posts/circular-import-in-python/</link><pubDate>Sun, 10 Mar 2019 10:59:00 +0800</pubDate><guid>https://www.fromkk.com/posts/circular-import-in-python/</guid><description>Recently, I found a really good example code for Python circular import, and I&amp;rsquo;d like to record it here.
Here is the code:
1 2 3 4 5 6 7 8 # X.py def X1(): return &amp;#34;x1&amp;#34; from Y import Y2 def X2(): return &amp;#34;x2&amp;#34; 1 2 3 4 5 6 7 8 # Y.</description></item><item><title>Python Dictionary Implementation</title><link>https://www.fromkk.com/posts/python-dictionary-implementation/</link><pubDate>Sun, 17 Feb 2019 21:48:00 +0800</pubDate><guid>https://www.fromkk.com/posts/python-dictionary-implementation/</guid><description>Overview # CPython allocation memory to save dictionary, the initial table size is 8, entries are saved as &amp;lt;hash,key,value&amp;gt; in each slot(The slot content changed after Python 3.6). When a new key is added, python use i = hash(key) &amp;amp; mask where mask=table_size-1 to calculate which slot it should be placed.</description></item><item><title>CSRF in Django</title><link>https://www.fromkk.com/posts/csrf-in-django/</link><pubDate>Wed, 07 Nov 2018 13:58:00 +0800</pubDate><guid>https://www.fromkk.com/posts/csrf-in-django/</guid><description>CSRF(Cross-site request forgery) is a way to generate fake user request to target website. For example, on a malicious website A, there is a button, click it will send request to www.B.com/logout. When the user click this button, he will logout from website B unconsciously.</description></item><item><title>Create Node Benchmark in Py2neo</title><link>https://www.fromkk.com/posts/create-node-benchmark-in-py2neo/</link><pubDate>Mon, 05 Nov 2018 15:55:00 +0800</pubDate><guid>https://www.fromkk.com/posts/create-node-benchmark-in-py2neo/</guid><description>Recently, I&amp;rsquo;m working on a neo4j project. I use Py2neo to interact with graph db. Alghough Py2neo is a very pythonic and easy to use, its performance is really poor. Sometimes I have to manually write cypher statement by myself if I can&amp;rsquo;t bear with the slow excution.</description></item><item><title>Deploy Nikola Org Mode on Travis</title><link>https://www.fromkk.com/posts/deploy-nikola-org-mode-on-travis/</link><pubDate>Sat, 03 Nov 2018 21:20:00 +0800</pubDate><guid>https://www.fromkk.com/posts/deploy-nikola-org-mode-on-travis/</guid><description>Recently, I enjoy using Spacemacs, so I decided to switch to org file from Markdown for writing blog. After several attempts, I managed to let Travis convert org file to HTML. Here are the steps.
Install Org Mode plugin #First you need to install Org Mode plugin on your computer following the official guide: Nikola orgmode plugin.</description></item><item><title>Using Chinese Characters in Matplotlib</title><link>https://www.fromkk.com/posts/using-chinese-characters-in-matplotlib/</link><pubDate>Thu, 04 Oct 2018 15:53:00 +0800</pubDate><guid>https://www.fromkk.com/posts/using-chinese-characters-in-matplotlib/</guid><description>After searching from Google, here is easiest solution. This should also works on other languages:
import matplotlib.pyplot as plt %matplotlib inline %config InlineBackend.figure_format = &amp;#39;retina&amp;#39; import matplotlib.font_manager as fm f = &amp;#34;/System/Library/Fonts/PingFang.ttc&amp;#34; prop = fm.FontProperties(fname=f) plt.title(&amp;#34;你好&amp;#34;,fontproperties=prop) plt.show() Output:</description></item><item><title>Enable C Extension for gensim on Windows</title><link>https://www.fromkk.com/posts/enable-c-extension-for-gensim-on-windows/</link><pubDate>Sat, 10 Jun 2017 14:43:00 +0800</pubDate><guid>https://www.fromkk.com/posts/enable-c-extension-for-gensim-on-windows/</guid><description>These days, I’m working on some text classification works, and I use gensim ’s doc2vec function.
When using gensim, it shows this warning message:
C extension not loaded for Word2Vec, training will be slow.
I search this on Internet and found that gensim has rewrite some part of the code using cython rather than numpy to get better performance.</description></item></channel></rss>