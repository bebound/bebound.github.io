<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spark on KK's Blog</title><link>https://www.fromkk.com/tags/spark/</link><description>Recent content in Spark on KK's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 18 Jul 2021 16:52:00 +0800</lastBuildDate><atom:link href="https://www.fromkk.com/tags/spark/index.xml" rel="self" type="application/rss+xml"/><item><title>Dynamic Allocate Executors when Executing Jobs in Spark</title><link>https://www.fromkk.com/posts/dynamic-allocate-executors-when-executing-jobs-in-spark/</link><pubDate>Sun, 18 Jul 2021 16:52:00 +0800</pubDate><guid>https://www.fromkk.com/posts/dynamic-allocate-executors-when-executing-jobs-in-spark/</guid><description>I wrote a Spark program to process logs. The number of logs always changes as time goes by. To ensure logs can be processed instantly, the number of executors is calculated by the maximum of logs per minutes. As a consequence, the CPU usage is low in executors.</description></item><item><title>Program Crash Caused by CPU Instruction</title><link>https://www.fromkk.com/posts/program-crash-caused-by-cpu-instruction/</link><pubDate>Sun, 17 May 2020 17:36:00 +0800</pubDate><guid>https://www.fromkk.com/posts/program-crash-caused-by-cpu-instruction/</guid><description>It&amp;rsquo;s inevitable to dealing with bugs in coding career. The main part of coding are implementing new features, fixing bugs and improving performance. For me, there are two kinds of bugs that is difficult to tackle: those are hard to reproduce, and those occur in code not wrote by you.</description></item><item><title>Import custom package or module in PySpark</title><link>https://www.fromkk.com/posts/import-custom-package-or-module-in-pyspark/</link><pubDate>Thu, 02 Apr 2020 22:24:00 +0800</pubDate><guid>https://www.fromkk.com/posts/import-custom-package-or-module-in-pyspark/</guid><description>First zip all of the dependencies into zip file like this. Then you can use one of the following methods to import it.
|-- kk.zip | |-- kk.py Using &amp;ndash;py-files in spark-submit #When submit spark job, add --py-files=kk.zip parameter. kk.zip will be distributed with the main scrip file, and kk.</description></item></channel></rss>